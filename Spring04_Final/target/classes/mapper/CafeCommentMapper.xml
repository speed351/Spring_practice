<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cafeComment">
	<!-- 
		댓글에 프로필 이미지도 같이 출력하기 위해 users 테이블과 join을 한다
		댓글도 페이징 처리가 필요하므로 select할때 startRowNum, endRowNum이 있어야 한다.
	-->
	<select id="getList" parameterType="cafeCommentDto"	resultType="cafeCommentDto">
		SELECT *
		FROM
			(SELECT result1.*, ROWNUM AS rnum
			FROM
				(SELECT	num, writer, content, target_id, ref_group,
					comment_group, deleted,	board_cafe_comment.regdate, profile
				FROM board_cafe_comment
				INNER JOIN	users
				ON board_cafe_comment.writer=users.id
				WHERE ref_group=#{ref_group}
				ORDER BY comment_group ASC, num ASC) result1)
			WHERE rnum BETWEEN	#{startRowNum} AND #{endRowNum}
	</select>
	<!-- 댓글을 실제로 삭제하지 않고 deleted 칼럼에 저장된 값을 no에서 yes로 바꾼다 -->
	<update id="delete" parameterType="int">
		UPDATE board_cafe_comment
		SET deleted='yes'
		WHERE num=#{num}
	</update>
	<!-- 댓글을 저장할때 댓글의 글번호도 미리 CafeCommentDto 객체에 담아와야 한다 -->
	<insert id="insert" parameterType="cafeCommentDto">
		INSERT INTO board_cafe_comment
		(num, writer, content, target_id, ref_group, comment_group, regdate)
		VALUES(#{num}, #{writer}, #{content}, #{target_id}, #{ref_group},
		#{comment_group}, SYSDATE)
	</insert>
	<!-- 저장 예정인 댓글의 글 번호를 미리 얻어내기 -->
	<select id="getSequence" resultType="int">
		SELECT board_cafe_comment_seq.NEXTVAL
		FROM DUAL
	</select>
	
	<update id="update" parameterType="cafeCommentDto">
		UPDATE board_cafe_comment
		SET content=#{content}
		WHERE num=#{num}
	</update>
	
	<select id="getData" parameterType="int" resultType="cafeCommentDto">
		SELECT num,writer,content,ref_group,comment_group,deleted,regdate
		FROM board_cafe_comment
		WHERE num=#{num}
	</select>
	
	<select id="getCount" parameterType="int" resultType="int">
		SELECT NVL(MAX(ROWNUM), 0)
		FROM board_cafe_comment
		WHERE ref_group=#{ref_group}
	</select>
</mapper>








