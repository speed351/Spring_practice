<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- JNDI 데이터 소스 객체 얻어오는 설정 Servers/context.xml 에 설정된 oracle 접속정보 가 있어야 된다. 
	
		<Resource name="jdbc/myoracle" auth="Container" type="javax.sql.DataSource" 
		driverClassName="oracle.jdbc.OracleDriver" url="jdbc:oracle:thin:@127.0.0.1:1521:xe" 
		username="scott" password="tiger" maxTotal="20" maxIdle="10" maxWaitMillis="-1"/> 
	
	-->
			
	
	<beans:bean id="dataSource"
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<beans:property name="jndiName"	value="java:comp/env/jdbc/myoracle" />
	</beans:bean>

	<beans:bean id="sessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="configLocation"
			value="classpath:Configuration.xml" />
	</beans:bean>

	<beans:bean id="sqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg name="sqlSessionFactory"
			ref="sessionFactory" />
	</beans:bean>


	<annotation-driven />

	<resources mapping="/resources/**" location="/resources/" />

	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<beans:bean id="multipartResolver"
	   class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	   <beans:property name="maxUploadSize" value="102400000"/>
	</beans:bean>   
	
	<context:component-scan base-package="com.gura.spring04" />
	<!-- 
		인터셉터를 동작하기 위해서는 인터셉터도 bean 되어야 하고 
		그리고 어떤 요청에서 인터셉터가 동작할지 url을 맵핑해야한다. 
	-->
	<beans:bean id="loginInterceptor" class="com.gura.spring04.interceptor.LoginInterceptor"/>
	
	<interceptors>
		<interceptor>
			<mapping path="/users/*"/>
			<exclude-mapping path="/users/signup_form"/>
			<exclude-mapping path="/users/signup"/>
			<exclude-mapping path="/users/login_form"/>
			<exclude-mapping path="/users/login"/>
			<beans:ref bean="loginInterceptor"/>
		</interceptor>
		<interceptor>
			<mapping path="/file/*"/>
			<exclude-mapping path="/file/list"/>
			<exclude-mapping path="/file/download"/>
			<beans:ref bean="loginInterceptor"/>
		</interceptor>
	</interceptors>

	<!-- 
		bean 의 이름을 이용해서 view 로 이동할수 있도록 설정 setOrder(0) 는 0 순위로 찾아 가겠다는 의미 0 
		순위로 찾아서 없으면 views 폴더 안에서 jsp 페이지를 찾게 된다. 
		
	-->
	<beans:bean	class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0" />
	</beans:bean>
</beans:beans>
